50 * 12 / 365
50 * 12 / 365 / 24
(50 * 12 / 365 / 24) % 1e6
(50 * 12 / 365 / 24) * 1e6
sys <- list(low=7e4,avg=1e6,high=7e6)
sys$low
rm(sys)
install.packages("mc2d")
library("mc2d", lib.loc="C:/R/R-3.1.2/library")
txnerrs <- 20           # avg per month
syserrs <- 1 / (5 * 12 * txnerrs) # avg monthly rate: once in 5yrs
1/ syserrs
# loss process assumptions
txnerrs <- 20           # avg per month
syserrs <- 1 / (5 * 12 * txnerrs) # avg monthly rate: once in 5yrs
sysqty  <- list(low=7e4, mode=1e6, high=7e6)  # num of txns
erramt  <- list(low=0, mode=100, high=1000)   # dollar impact
impact <- function(erramt, syserrs, sysqty){
if(runif(1) > syserrs)  # normal error
result <- rpert(1, erramt$low, erramt$mode, erramt$high)
else{                   # systemic error
txns <- rpert(1, sysqty$low, sysqty$mode, sysqty$high)
result <- sum( rpert(txns, erramt$low, erramt$mode, erramt$high) )
}
return(result)
}
impact(erramt,syserrs,sysqty)
z <- repeat(1e4,impact(erramt,syserrs,sysqty))
z <- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(z)
hist(log(z))
install.packages("triangle")
curve(dpert,from=0,to=1000,min=0,mode=100,max=1000)
warnings()
curve(dpert(x,min=0,mode=100,max=1000),from=0,to=1000)
max(z)
length(z[z>1e3])
hist(z[z>800])
txn     <- 1e6
txnpmin <- (1e6 * 12 / 52 / 5 / 24 / 60)  # txn per minute
txn     <- 1e6
txnpmin <- (1e6 * 12 / 52 / 5 / 24 / 60)  # txn per minute
txnerrs <- 20           # avg per month
syserrs <- 1 / (5 * 12 * txnerrs) # avg monthly rate: once in 5yrs
sysqty  <- list(low=txnpmin*10, mode=txn, high=7e6)  # num of txns
erramt  <- list(low=0, mode=100, high=1000)   # dollar impact
curve(dpert(x,min=sysqty$low, mode=sysqty$mode, maxsysqty$high),from=0,to=7e6)
curve(dpert(x,min=sysqty$low, mode=sysqty$mode, max=sysqty$high),from=0,to=7e6)
curve(dpert(x,min=erramt$low, mode=erramt$mode, max=erramt$high),add=T)
curve(dpert(x,min=erramt$low, mode=erramt$mode, max=erramt$high),from=0, to=1e6)
curve(dpert(x,min=erramt$low, mode=erramt$mode, max=erramt$high),from=0, to=1e4)
txn     <- 1e6
txnpmin <- (1e6 * 12 / 52 / 5 / 24 / 60)  # txn per minute
txnerrs <- 20           # avg per month
syserrs <- 1 / (5 * 12 * txnerrs) # avg monthly rate: once in 5yrs
sysqty  <- list(low=txnpmin*10, mode=txn, high=7e6)  # num of txns
erramt  <- list(low=0, mode=100, high=1e6)   # dollar impact
curve(dpert(x,min=erramt$low, mode=erramt$mode, max=erramt$high),from=0, to=1e6)
curve(dpert(x,min=sysqty$low, mode=sysqty$mode, max=sysqty$high),from=0, to=1e6,add=T)
curve(dpert(x,min=erramt$low, mode=erramt$mode, max=erramt$high),from=0, to=1e6)
curve(dpert(x*erramt$mode,min=sysqty$low, mode=sysqty$mode, max=sysqty$high),from=0, to=1e6,add=T)
curve(dpert(x*erramt$mode,min=sysqty$low, mode=sysqty$mode, max=sysqty$high),from=0, to=7e6)
txnpmin*10
curve(dpert(x,min=sysqty$low, mode=sysqty$mode, max=sysqty$high),from=0, to=7e6)
sysimpact <- function(sysqty,erramt){
txns <- rpert(1, sysqty$low, sysqty$mode, sysqty$high)
result <- sum( rpert(txns, erramt$low, erramt$mode, erramt$high) )
return(result)
}
# simulated loss function
impact <- function(erramt, syserrs, sysqty){
if(runif(1) > syserrs)
# normal error
result <- rpert(1, erramt$low, erramt$mode, erramt$high)
else
# systemic error
result <- sysimpact(sysqty,erramt)
return(result)
}
x <- replicate(1e4,sysimpact(sysqty,erramt))
rm(z)
sysimpact(sysqty,erramt)
x <- replicate(1e2,sysimpact(sysqty,erramt))
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
txnpmin*10
sysqty  <- list(low=10,mode=100,high=1000)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
sysimpact(sysqty,erramt)
replicate(100,sysimpact(sysqty,erramt))
x<- replicate(1e4,sysimpact(sysqty,erramt))
hist(x)
hist(log(x))
curve(dpert(x,min=0,mode=mean(x),max=max(x)),from=0,to=1.5e8,add=T)
hist(log(x),freq=F)
hist(x,freq=F)
curve(dpert(x,min=0,mode=mean(x),max=max(x)),from=0,to=1.5e8,add=T)
hist(x,freq=F)
curve(dpert(x,min=0,mode=1e4,max=max(x)),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=1e9,from=0,to=1.5e8,add=T)
)
hist(x,freq=F)
curve(dpert(x,min=0,mode=1e4,max=1e9),from=0,to=1.5e8,add=T)
max(x)
curve(dpert(x,min=0,mode=1e4,max=1e7),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=1e8),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=5e8),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=2e8),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=3e8),from=0,to=1.5e8,add=T)
hist(x,freq=F)
curve(dpert(x,min=0,mode=1e4,max=3e8),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=2.5e8),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=2.2e8),from=0,to=1.5e8,add=T)
curve(dpert(x,min=0,mode=1e4,max=2e8),from=0,to=1.5e8,add=T)
hist(x,freq=F)
curve(dpert(x,min=0,mode=1e4,max=2e8),from=0,to=1.5e8,add=T)
rm(txnpmin)
rm(x)
txn     <- 1e4
txnerrs <- 10           # avg per period
syserrs <- 1 / 1000
sysqty  <- list(low=10,mode=100,high=1000)
erramt  <- list(low=10, mode=100, high=1e4)   # dollar impact
sysimpact <- function(sysqty,erramt){
txns <- rtriangle(1, sysqty$low, sysqty$mode, sysqty$high)
result <- sum( rtriangle(txns, erramt$low, erramt$mode, erramt$high) )
return(result)
}
x <- replicate(100,sysimpact(sysqty,erramt))
require(triangle, quietly=TRUE)
x <- replicate(100,sysimpact(sysqty,erramt))
# systemic impact function
sysimpact <- function(sysqty,erramt){
txns <- rtriangle(1, sysqty$low,  sysqty$high, sysqty$mode)
result <- sum( rtriangle(txns, erramt$low, erramt$high, erramt$mode) )
return(result)
}
# simulated loss function
impact <- function(erramt, syserrs, sysqty){
if(runif(1) > syserrs)
# normal error
result <- rtriangle(1, erramt$low, erramt$high, erramt$mode)
else
# systemic error
result <- sysimpact(sysqty,erramt)
return(result)
}
x <- replicate(100,sysimpact(sysqty,erramt))
hist(x)
rm(x)
x <- replicate(1e4,sysimpact(sysqty,erramt))
hist(x,freq=F)
impact(erramt,syserrs,sysqty)
z<- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(z,freq=F)
hist(log(z),freq=F)
erramt  <- list(low=10, mode=100, high=1e6)   # dollar impact
z<- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(log(z),freq=F)
length(z[z>1e6])
txn     <- 1e4
txnerrs <- 10           # avg per period
syserrs <- 1 / 1000
sysqty  <- list(low=5,mode=10,high=100)
erramt  <- list(low=10, mode=100, high=1e6)   # dollar impact
z<- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(log(z),freq=F)
erramt  <- list(low=10, mode=100, high=1e7)   # dollar impact
z<- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(log(z),freq=F)
erramt  <- list(low=10, mode=100, high=1e6)   # dollar impact
z<- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(log(z),freq=F)
length(z[z>1e6])
hist(z[z>1e4])
hist(z[z>1e5])
hist(z[z>1e6])
length(z[z>1e5])
length(z[z>5e5])
length(z[z>9e5])
hist(z[z>9e5])
hist(log(z[z>9e5]))
y <- z[z>9e5]
qqnorm(log(y))
erramt  <- list(low=10, mode=1000, high=1e6)   # dollar impact
z<- replicate(1e4,impact(erramt,syserrs,sysqty))
hist(log(z),freq=F)
hist(log(z),breaks=100,freq=F)
hist(z,breaks=100,freq=F)
# individual error impact function
unitimpact <- function(erramt,n=1){
return(rtriangle(n, erramt$low, erramt$high, erramt$mode))
}
# systemic impact function
sysimpact <- function(sysqty,erramt){
txns <- rtriangle(1, sysqty$low,  sysqty$high, sysqty$mode)
result <- sum( unitimpact(erramt,txns) )
return(result)
}
# simulated loss function
impact <- function(erramt, syserrs, sysqty){
if(runif(1) > syserrs)
# normal error
result <- unitimpact(erramt)
else
# systemic error
result <- sysimpact(sysqty,erramt)
return(result)
}
100 /12
rm(x,y,z)
1e4 / 1000
